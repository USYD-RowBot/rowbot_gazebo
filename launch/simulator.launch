<?xml version="1.0"?>

<launch>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find robotx_gazebo)/config/custom_rosconsole.conf"/>
  <!-- Gazebo world to load -->
  <arg name="world" default="$(find robotx_gazebo)/worlds/example_course.world" />
  <!-- If true, run gazebo GUI -->
  <arg name="gui" default="true" />
  <!-- If true, run gazebo in verbose mode -->
  <arg name="verbose" default="false"/>

  <!-- Initial USV location and attitude-->
  <arg name="x" default="0" />
  <arg name="y" default="0" />
  <arg name="z" default="0.1" />
  <arg name="P" default="0" />
  <arg name="R" default="0" />
  <arg name="Y" default="0" />

  <!-- Allow user specified thruster configurations
       H = stern trusters on each hull
       T = H with a lateral thruster
       X = "holonomic" configuration -->

  <arg name="thrust_config" default="H" />

  <!-- Start Gazebo with the world file -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="verbose" value="$(arg verbose)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)" />
  </include>



    <!-- Load robot model -->
  <arg name="urdf" default="$(find rowbot_description)/urdf/rowbot_wamv.xacro"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg urdf)"/>

  <!-- Spawn model in Gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
	args="-x $(arg x) -y $(arg y) -z $(arg z)
	      -R $(arg R) -P $(arg P) -Y $(arg Y)
	      -urdf -param robot_description -model wamv"/>
  <!-- Driving with joystick -->
  <!--include file="$(find robotx_gazebo)/launch/usv_diffdrive_v2.launch"/-->
  <!--node pkg="robotx_gazebo" type="twist2drive_keyboard.py" name="twist2drive_keyboard" output="screen" /-->

  <arg name="use_tf_static" default="false"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" >
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="use_tf_static" value="$(arg use_tf_static)"/>
  </node>


</launch>
